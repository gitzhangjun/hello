<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop.food.user.dao.UserDao">

    <resultMap type="com.shop.food.user.entity.User" id="UserMap">
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="account" column="account" jdbcType="VARCHAR"/>
        <result property="passwd" column="passwd" jdbcType="VARCHAR"/>
        <result property="userName" column="user_name" jdbcType="VARCHAR"/>
        <result property="trueName" column="true_name" jdbcType="VARCHAR"/>
        <result property="mobile" column="mobile" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="zipCode" column="zip_code" jdbcType="VARCHAR"/>
        <result property="deliveryAddre" column="delivery_addre" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="UserMap">
        select
          user_id, account, user_name, true_name, mobile, email, zip_code, delivery_addre, create_time, update_time
        from edu_bit_shop.user
        where user_id = #{userId}
    </select>


    <!--查询单个-->
    <select id="queryByAccount" resultMap="UserMap">
        select
          user_id, account,  user_name, true_name, mobile, email, zip_code, delivery_addre, create_time, update_time
        from edu_bit_shop.user
        where account = #{account}
    </select>


    <!--用户登录-->
    <select id="login" resultMap="UserMap">
        select
          user_id, account,  user_name, true_name, mobile, email, zip_code, delivery_addre, create_time, update_time
        from edu_bit_shop.user
        where  account = #{account} and passwd = #{passwd}
    </select>

    <select id="queryCount" parameterType="java.lang.String" resultType="java.lang.Integer">
        select
          count(user_id)
        from edu_bit_shop.user
        where 1=1
            and  account like '%${account}%'
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UserMap">
        select
          user_id, account, user_name, true_name, mobile, email, zip_code, delivery_addre, create_time, update_time
        from edu_bit_shop.user
        where 1=1 and  account like '%${account}%'
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="UserMap">
        select
          user_id, account,  user_name, true_name, mobile, email, zip_code, delivery_addre, create_time, update_time
        from edu_bit_shop.user
        <where>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="account != null and account != ''">
                and account = #{account}
            </if>
            <if test="passwd != null and passwd != ''">
                and passwd = #{passwd}
            </if>
            <if test="userName != null and userName != ''">
                and user_name = #{userName}
            </if>
            <if test="trueName != null and trueName != ''">
                and true_name = #{trueName}
            </if>
            <if test="mobile != null and mobile != ''">
                and mobile = #{mobile}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="zipCode != null and zipCode != ''">
                and zip_code = #{zipCode}
            </if>
            <if test="deliveryAddre != null and deliveryAddre != ''">
                and delivery_addre = #{deliveryAddre}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="userId" useGeneratedKeys="true">
        insert into edu_bit_shop.user(account, passwd, user_name, true_name, mobile, email, zip_code, delivery_addre, create_time, update_time)
        values (#{account}, #{passwd}, #{userName}, #{trueName}, #{mobile}, #{email}, #{zipCode}, #{deliveryAddre}, #{createTime}, #{updateTime})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update edu_bit_shop.user
        <set>
            <if test="account != null and account != ''">
                account = #{account},
            </if>
            <if test="passwd != null and passwd != ''">
                passwd = #{passwd},
            </if>
            <if test="userName != null and userName != ''">
                user_name = #{userName},
            </if>
            <if test="trueName != null and trueName != ''">
                true_name = #{trueName},
            </if>
            <if test="mobile != null and mobile != ''">
                mobile = #{mobile},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="zipCode != null and zipCode != ''">
                zip_code = #{zipCode},
            </if>
            <if test="deliveryAddre != null and deliveryAddre != ''">
                delivery_addre = #{deliveryAddre},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where user_id = #{userId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from edu_bit_shop.user where user_id = #{userId}
    </delete>

</mapper>